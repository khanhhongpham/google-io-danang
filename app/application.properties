spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp
spring.datasource.url=jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}
spring.datasource.username=${PG_USER}
spring.datasource.password=${PG_PASS}

# fix startup error "Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented"
# reference https://github.com/spring-projects/spring-boot/issues/12007#issuecomment-369388646
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

logging.level.org.springframework.web=DEBUG
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
google.recaptcha.key-site=
google.recaptcha.key-secret=
google.recaptcha.u-r-i=
server.servlet.session.cookie.secure= true

# Turn Password Bruteforce on or off
# False = no protection, Password Bruteforce is exploitable
# Captcha = protection, using Google Recaptcha to prevent Pw_bruteforce
security.pwbruteforce= False

# Turn Session Fixation on or off
# False = no protection, Session Fixation is exploitable
# True = protection, Session Fixation not exploitable
security.ss-fixation= True

# Turn SQLi on or off
# False = no protection, SQLi is exploitable
# True = protection, SQLi not exploitable
security.sql-injection= False

# 4 main types to store password in db
# Clear: Clear text
# Hashed: use SHA256
# SaltHashed: use SHA256 with Salt string
# PBKDF2
security.pw-storage= SaltHashed

# Turn Reset-all-password-of-database on or off
security.reset-password= True

# Turn Set Secure Cookie on or off
# False = no protection
# True = protection
security.set-cookie= False

# Turn XSS Prevention on or off
# False = no protection
# True = protection
security.xss-prevention= ${XSS_PROTECTION}

